{% set name = "lal" %}
{% set version = "7.1.5" %}

# define build number
{% set build = 0 %}

# default FFT implememntation to FFTW
{% set fft_impl = fft_impl or 'fftw' %}

# prefer FFTW builds over MKL using a build number offset
{% if fft_impl == 'fftw' %}
{% set build = build + 100 %}
{% endif %}

# dependency versions
{% set swig_version = "3.0.10" %}

# avoid circular imports that would break migrations
{% set migrating = False %}
{% set migrating = True %}  # [not x86_64 or python_impl != 'cpython' or py >= 311]

package:
  name: {{ name }}-split
  version: {{ version }}

source:
  url: http://software.ligo.org/lscsoft/source/lalsuite/{{ name }}-{{ version }}.tar.xz
  sha256: 058049e95d246c72d350d2305c339e830fa8f996a0682532dfd54021112f8100

build:
  ignore_run_exports:
    - blas
    # run_exports parsing for fftw is broken, so we ignore it
    # manually, for now
    - fftw
  number: {{ build }}
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - pkg-config >=0.18.0
    - make
    - bc
    - swig >={{ swig_version }}
  host:
    - fftw * nompi*  # [fft_impl == "fftw"]
    - gsl
    - hdf5
    - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
    - libzlib

outputs:
  - name: liblal
    script: install-lib.sh
    build:
      run_exports:
        - {{ pin_subpackage("liblal", max_pin="x") }}
      string: {{ fft_impl }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - make  # [not win]
        - swig >={{ swig_version }}
      host:
        - fftw * nompi*  # [fft_impl == "fftw"]
        - gsl
        - hdf5
        - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
        - zlib
      run:
        - fftw  # [fft_impl == "fftw"]
        - gsl
        - hdf5
        - libzlib
      run_constrained:
        # 7.1.1 is the version where the packages were restructured
        - lal >=7.1.1
        - python-lal >=7.1.1

    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite/
      license: GPL-2.0-or-later
      license_family: GPL
      license_file: COPYING
      summary: LSC Algorithm Library shared object libraries
      description: |
        The LSC Algorithm Library for gravitational wave data analysis.
        This package contains the shared object libraries need to build
        applications that use LAL.
    test:
      requires:
        - pkg-config
      commands:
        # check library
        - test -f ${PREFIX}/lib/liblal${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/liblalsupport${SHLIB_EXT}  # [unix]
        # check activate variables
        - test "${LAL_DATADIR}" = "${PREFIX}/share/lal"  # [unix]
        # check pkg-config
        - pkg-config --print-errors --exact-version "${PKG_VERSION}" lal
        - pkg-config --print-errors --exact-version "${PKG_VERSION}" lalsupport
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite.git
      license: GPL-2.0-or-later
      license_family: GPL
      license_file: COPYING
      summary: LSC Algorithm Library shared object libraries
      description: |
        The LSC Algorithm Library for gravitational wave data analysis.
        This package contains the shared-object libraries needed to run
        applications that use the LAL library.

  - name: python-lal
    script: install-python.sh
    build:
      ignore_run_exports:
        # things we declare to help the solver, but don't actually need
        - mkl
        # we don't link directly against libpython
        - python
      string: {{ fft_impl }}_py{{ py }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - make
        - pkg-config >=0.18.0
        - swig >={{ swig_version }}
        # extras for cross-compilation:
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - numpy                               # [build_platform != target_platform]
        - python                              # [build_platform != target_platform]
      host:
        - {{ pin_subpackage('liblal', exact=True) }}
        - numpy
        - python
        # extras to help the solver:
        - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
      run:
        # NOTE: on linux, python-lal links the LAL dependencies
        #       as well so we have to list them here. why this
        #       doesn't happen on osx, I'm not sure.
        - {{ pin_subpackage('liblal', exact=True) }}
        - ligo-segments
        - {{ pin_compatible('numpy') }}
        - python
        - python-dateutil
        - scipy
        - six
    test:
      requires:
        - freezegun
        - lscsoft-glue
        - pytest >=4.0
        {% if not migrating %}
        - python-ligo-lw
        {% endif %}
      source_files:
        - test/python
      commands:
        - python -m pytest -ra -v test/python {% if migrating -%}
              --ignore test/python/test_rate.py
              -k 'not lal.rate and not lal.series'
        {%- endif %}
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite/
      license: GPL-2.0-or-later
      license_family: GPL
      license_file: COPYING
      summary: LSC Algorithm Library Python bindings
      description: |
        The LSC Algorithm Library for gravitational wave data analysis.
        This package contains the Python bindings of the LAL C libraries
        and additional Python modules.

        Note: this package only provides the importable Python libraries.
        All command-line interfaces, scripts, and executables are
        part of the `lal` package.

  - name: lal
    script: install-bin.sh
    build:
      ignore_run_exports:
        # things we declare to help the solver, but don't actually need
        - mkl
        # we don't link directly against libpython
        - python
      string: {{ fft_impl }}_py{{ py }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - help2man >=1.37
        - make
        - sed
      host:
        - {{ pin_subpackage('liblal', exact=True) }}
        - python
        # extras to help the solver:
        - mkl {{ mkl }}  # [fft_impl == "mkl"]
      run:
        - {{ pin_subpackage('liblal', exact=True) }}
        - python
        - {{ pin_subpackage('python-lal', exact=True) }}
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite/
      license: GPL-2.0-or-later
      license_family: GPL
      license_file: COPYING
      summary: LSC Algorithm Library
      description: |
        The LSC Algorithm Library for gravitational wave data analysis.
    test:
      commands:
        - lal_version --verbose
        - lal_simd_detect
      imports:
        - lal

about:
  home: https://wiki.ligo.org/Computing/LALSuite
  doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
  dev_url: https://git.ligo.org/lscsoft/lalsuite/
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: COPYING
  summary: LSC Algorithm Library
  description: |
    The LSC Algorithm Library for gravitational wave data analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL library.  If you want to install
    the Python bindings, please install the associated python-lal
    package.

extra:
  feedstock-name: lal
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
